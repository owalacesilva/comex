#!/usr/bin/env php
<?php
// test-db-connection.php

try {
    // Check if PDO PostgreSQL driver is available
    if (!in_array('pgsql', PDO::getAvailableDrivers())) {
        throw new Exception('PostgreSQL PDO driver is not available');
    }

    // Get database credentials from environment variables
    $driver = getenv('DB_DRIVER') ?: 'pgsql';
    $host = getenv('DB_HOST') ?: 'localhost';
    $port = getenv('DB_PORT') ?: '5432';
    $database = getenv('DB_NAME') ?: getenv('DB_DATABASE');
    $username = getenv('DB_USERNAME') ?: getenv('DB_USER');
    $password = getenv('DB_PASSWORD') ?: getenv('DB_PASS');

    // Validate required parameters
    if (!$database || !$username) {
        throw new Exception('Missing required environment variables: DB_NAME and DB_USERNAME');
    }

    // Create PostgreSQL DSN
    $dsn = "pgsql:host={$host};port={$port};dbname={$database}";
    
    echo "Attempting to connect to PostgreSQL...\n";
    echo "Driver: {$driver}\n";
    echo "Host: {$host}\n";
    echo "Port: {$port}\n";
    echo "Database: {$database}\n";
    echo "Username: {$username}\n";
    echo "DSN: {$dsn}\n\n";

    // Attempt connection
    $pdo = new PDO($dsn, $username, $password, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_TIMEOUT => 5
    ]);

    echo "✅ Connection successful!\n";
    
    // Test a simple query
    $stmt = $pdo->query('SELECT version()');
    $version = $stmt->fetchColumn();
    echo "PostgreSQL version: {$version}\n";

} catch (PDOException $e) {
    echo "❌ Connection failed: " . $e->getMessage() . "\n";
    exit(1);
} catch (Exception $e) {
    echo "❌ Error: " . $e->getMessage() . "\n";
    exit(1);
}
